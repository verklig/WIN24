@model MembersViewModel
@using WebApp.Models
@{
  ViewData["Title"] = "Team Members";
}

<div class="title-div flex">
  <h2>
    @ViewData["Title"]
  </h2>
  <button class="btn btn-blue" data-toggle="add-overlay">
    <i class="fa-regular fa-plus"></i>
    Add Member
  </button>
</div>

<div class="member-container">
  @foreach(var user in Model.Users)
  {
    if (user != null)
    {
      @await Html.PartialAsync("Partials/Components/_MemberCard", user)
    }
  }
</div>

@await Html.PartialAsync("Partials/Components/_AddMemberForm", Model.AddMemberViewModel)
@await Html.PartialAsync("Partials/Components/_EditMemberForm", Model.EditMemberViewModel)

@section Scripts {
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const shouldShow = '@ViewData["ShowForm"]' === 'true';

      if (shouldShow) {
        document.getElementById('add-overlay').classList.remove('hidden')
      }
    });
  </script>
}