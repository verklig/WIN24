@model Domain.Models.Project

<div class="project-card">
  <div class="card-div flex">

    @{
      var resolvedImage = Url.Content(!string.IsNullOrWhiteSpace(Model?.Image)
        ? Model.Image
        : "/images/project-image-placeholder.svg");
    }
    <img src="@resolvedImage" alt="Project Image">

    <div class="card-title">
      <h3>@(Model?.ProjectName ?? "No Project Name")</h3>
      <span>@(Model?.Client?.ClientName ?? "No Client")</span>
    </div>
    <button class="btn" data-toggle="card-menu-@Model?.Id">
      <i class="fa-solid fa-circle"></i>
      <i class="fa-solid fa-circle"></i>
    </button>
  </div>

  <p>@(Model?.Description ?? "No Description")</p>

  <div class="project-card-footer flex">
    @{
      string timeLeft = "Indefinite";
      string backgroundClass = "";

      if (Model?.EndDate is DateTime endDate)
      {
        var now = DateTime.Now.Date;
        var totalDays = (endDate - now).Days;

        if (totalDays > 0)
        {
          if (totalDays < 7)
          {
            backgroundClass = "timer-red";
          }
          else if (totalDays < 30)
          {
            backgroundClass = "timer-yellow";
          }

          int years = totalDays / 365;
          int months = (totalDays % 365) / 30;
          int weeks = ((totalDays % 365) % 30) / 7;
          int days = ((totalDays % 365) % 30) % 7;

          if (years > 0)
          {
            timeLeft = $"{years} {(years == 1 ? "year" : "years")}";
          }
          else if (months > 0)
          {
            timeLeft = $"{months} {(months == 1 ? "month" : "months")}";
          }
          else if (weeks > 0)
          {
            timeLeft = $"{weeks} {(weeks == 1 ? "week" : "weeks")}";
          }
          else if (days > 0)
          {
            timeLeft = $"{days} {(days == 1 ? "day" : "days")}";
          }
        }
        else
        {
          timeLeft = "Due";
          backgroundClass = "timer-red";
        }
      }
    }
    <div class="card-timer flex @backgroundClass">
      <i class="fa-duotone fa-solid fa-clock"></i>
      <span>@timeLeft</span>
    </div>
    <div class="flex">
      @foreach (var user in Model?.Users?.Take(3) ?? Enumerable.Empty<Domain.Models.User>())
      {
        var image = !string.IsNullOrWhiteSpace(user.Image)
          ? Url.Content(user.Image)
          : Url.Content("/images/profile-picture-placeholder.svg");

        <img src="@image" alt="Profile Picture" class="profile-picture">
      }
    </div>
  </div>

  @await Html.PartialAsync("Partials/Components/_ProjectCardMenu", Model)
</div>